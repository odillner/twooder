{"version":3,"sources":["components/CloseButton.js","reducers/notification.js","components/Notification.js","utils/config.js","utils/logger.js","services/login.js","services/users.js","reducers/windows.js","reducers/session.js","components/NavBar.js","components/Footer.js","pages/SignUp.js","pages/SignIn.js","pages/OwnUser.js","pages/Home.js","pages/Users.js","services/twoods.js","pages/Twoods.js","services/rooms.js","pages/Rooms.js","pages/index.js","styles/index.js","components/StandardWindow.js","hooks/index.js","components/StandardTable.js","components/Profile.js","components/windows/Users.js","components/Twood.js","components/Room.js","components/windows/index.js","components/windows/SignIn.js","components/windows/SignUp.js","components/windows/Twoods.js","components/windows/Rooms.js","components/windows/OwnUser.js","WindowRenderer.js","App.js","store.js","index.js"],"names":["CloseIcon","styled","div","theme","materialText","CloseButton","onClose","style","float","margin","onClick","info","message","duration","dispatch","a","type","timeout","setTimeout","data","error","notificationReducer","state","action","newState","clearTimeout","Notification","notification","useSelector","useDispatch","backgroundColor","className","position","left","width","API_URL","process","baseUrl","auth","user","logger","axios","post","res","getAll","get","create","newUser","getById","id","remove","delete","update","put","initialState","current","items","addWindow","Math","floor","random","closeWindow","windowReducer","concat","filter","item","token","storageChecked","sessionReducer","MainDropDown","setOpen","top","to","role","SecondaryDropDown","signOut","window","localStorage","removeItem","right","zIndex","aria-label","NavBar","session","useState","mainOpen","setMainOpen","secondaryOpen","setSecondaryOpen","justifyContent","display","active","fontWeight","alt","height","marginRight","username","Footer","bottom","variant","shadow","padding","lineHeight","SignUp","useEffect","SignIn","OwnUser","Home","SingleUser","useParams","getUser","userService","Users","getUsers","newTwood","headers","Authorization","getByUser","obj","like","reply","SingleTwood","getTwood","twoodService","Twoods","getTwoods","NewTwood","newRoom","SingleRoom","getRoom","roomService","Rooms","getRooms","NewRoom","Routing","path","GlobalStyles","createGlobalStyle","styleReset","ms_sans_serif","ms_sans_serif_bold","StyleWrapper","props","original","children","StandardWindow","windows","history","useHistory","onMouseDown","title","push","useField","value","setValue","input","onChange","event","target","clear","useTwood","twood","setTwood","replyField","likes","content","e","preventDefault","replies","operations","tableTypes","twoods","users","rooms","StandardTable","index","setIndex","pages","setPages","pageSize","sortOrder","setSortOrder","initPages","list","nofPages","ceil","length","temp","count","i","j","next","prev","sort","head","b","usePages","tableType","map","key","cell","disabled","Profile","TwoodReply","label","Twood","size","Room","room","name","windowIndex","signin","nameField","passwordField","styles","primary","password","windowId","loginService","setItem","manualSignIn","signup","signUp","newtwood","titleField","contentField","multiline","newroom","ownuser","WindowRenderer","Component","App","getItem","reducer","combineReducers","windowsReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb14aa84.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {Button} from 'react95'\r\n\r\nconst CloseIcon = styled.div`\r\n  display: inline-block;\r\n  width: 16px;\r\n  height: 16px;\r\n  margin-left: -1px;\r\n  margin-top: -1px;\r\n  transform: rotateZ(45deg);\r\n  position: relative;\r\n  :before,\r\n  :after {\r\n    content: \"\";\r\n    position: absolute;\r\n    background: ${({theme}) => theme.materialText};\r\n  }\r\n  :before {\r\n    height: 100%;\r\n    width: 3px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n  }\r\n  :after {\r\n    height: 3px;\r\n    width: 100%;\r\n    left: 0;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`\r\n\r\nexport const CloseButton = ({onClose}) => {\r\n    return (\r\n        <Button\r\n            style={{float: 'right', margin: '3px'}}\r\n            onClick={() => onClose()}\r\n        >\r\n            <CloseIcon/>\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default CloseButton","const notificationReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n    case 'DISPLAY_INFO': {\r\n        const newState = {\r\n            type: 'Notification',\r\n            message: action.data.message,\r\n            timeout: action.data.timeout\r\n        }\r\n        return newState\r\n    }\r\n    case 'DISPLAY_ERROR': {\r\n        const newState = {\r\n            type: 'Error',\r\n            message: action.data.message,\r\n            timeout: action.data.timeout\r\n        }\r\n        return newState\r\n    }\r\n    case 'RESET_NOTIFICATION': {\r\n        if (state) {\r\n            clearTimeout(state.timeout)\r\n        }\r\n        return null\r\n    }\r\n    default: return state\r\n    }\r\n}\r\n\r\nexport const info = (message, duration) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'RESET_NOTIFICATION',\r\n        })\r\n\r\n        const timeout = setTimeout(() => {\r\n            dispatch({\r\n                type: 'RESET_NOTIFICATION',\r\n            })\r\n        }, duration*1000)\r\n\r\n        dispatch({\r\n            type: 'DISPLAY_INFO',\r\n            data: {message, timeout}\r\n        })\r\n    }\r\n}\r\n\r\nexport const error = (message, duration) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'RESET_NOTIFICATION',\r\n        })\r\n\r\n        const timeout = setTimeout(() => {\r\n            dispatch({\r\n                type: 'RESET_NOTIFICATION',\r\n            })\r\n        }, duration*1000)\r\n\r\n        dispatch({\r\n            type: 'DISPLAY_ERROR',\r\n            data: {message, timeout}\r\n        })\r\n    }\r\n}\r\n\r\nexport const clear = () => {\r\n    return {\r\n        type: 'RESET_NOTIFICATION',\r\n    }\r\n}\r\n\r\nexport default notificationReducer","import React from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n\r\nimport {Window, WindowHeader, WindowContent} from 'react95'\r\nimport CloseButton from './CloseButton'\r\nimport {clear} from '../reducers/notification'\r\n\r\nconst Notification = () => {\r\n    const notification = useSelector(state => state.notification)\r\n    const dispatch = useDispatch()\r\n\r\n    if (notification === null) return null\r\n\r\n    const style = (notification.type === 'Error') ? {backgroundColor: 'red'} : null\r\n\r\n    return (\r\n        <Window className='window' style={{position: 'absolute', left: '80%', width: '20%'}}>\r\n            <WindowHeader className='window-header' style={style}>\r\n                <span>{notification.type}</span>\r\n                <CloseButton onClose={() => dispatch(clear())}></CloseButton>\r\n            </WindowHeader>\r\n            <WindowContent>{notification.message}</WindowContent>\r\n        </Window>\r\n    )\r\n}\r\n\r\nexport default Notification","let API_URL = process.env.REACT_APP_API_URL\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n    API_URL = '/'\r\n}\r\n\r\nexport {\r\n    API_URL\r\n}","export default {\r\n    info: (...params) => {\r\n        if (process.env.NODE_ENV !== 'test' && process.env.NODE_ENV !== 'production') {\r\n            console.log(...params)\r\n        }\r\n    },\r\n\r\n    error: (...params) => {\r\n        if (process.env.NODE_ENV !== 'test' && process.env.NODE_ENV !== 'production') {\r\n            console.error(...params)\r\n        }\r\n    }\r\n}\r\n","import axios from 'axios'\r\n\r\nimport {API_URL} from '../utils/config'\r\nimport logger from '../utils/logger'\r\n\r\nconst extension = 'api/login/'\r\nconst baseUrl = API_URL + extension\r\n\r\nexport default {\r\n    auth: async (user) => {\r\n        try {\r\n            logger.info(extension, 'Authenticating user:', user)\r\n\r\n            const res = await axios.post(baseUrl, user)\r\n\r\n            logger.info(extension, 'User authenticated', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n}","import axios from 'axios'\r\n\r\nimport {API_URL} from '../utils/config'\r\nimport logger from '../utils/logger'\r\n\r\nconst extension = 'api/users/'\r\nconst baseUrl = API_URL + extension\r\n\r\nexport default {\r\n    getAll: async () => {\r\n        try {\r\n            logger.info(extension, 'Fetching users')\r\n\r\n            const res = await axios.get(baseUrl)\r\n\r\n            logger.info(extension, 'Users fetched', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    create: async (newUser) => {\r\n        try {\r\n            logger.info(extension, 'Creating user', newUser)\r\n\r\n            const res = await axios.post(baseUrl, newUser)\r\n\r\n            logger.info(extension, 'User created', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    getById: async (id) => {\r\n        try {\r\n            logger.info(extension, 'Fetching user', id)\r\n\r\n            const res = await axios.get(baseUrl + id)\r\n\r\n            logger.info(extension, 'User fetched', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    remove: async (id) => {\r\n        try {\r\n            logger.info(extension, 'Deleting user', id)\r\n\r\n            const res = await axios.delete(baseUrl + id)\r\n\r\n            logger.info(extension, 'User deleted', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    update: async (id, newUser) => {\r\n        try {\r\n            logger.info(extension, 'Updating user', id, newUser)\r\n\r\n            const res = await axios.put(`${baseUrl}${id}`, newUser)\r\n\r\n            logger.info(extension, 'User updated', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n}","const initialState = {\r\n    current: 0,\r\n    items: []\r\n}\r\n\r\nconst windowReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n    case 'ADD_WINDOW': {\r\n        const newState = {\r\n            current: action.data.id,\r\n            items: state.items.concat(action.data)\r\n        }\r\n        return newState\r\n    }\r\n    case 'CLOSE_WINDOW': {\r\n        const newState = {\r\n            ...state,\r\n            items: state.items.filter(item => item.id != action.data)\r\n        }\r\n        return newState\r\n    }\r\n    case 'SET_CURRENT_WINDOW': {\r\n        const newState = {\r\n            ...state,\r\n            current: action.data,\r\n        }\r\n        return newState\r\n    }\r\n    case 'RESET_CURRENT_WINDOW': {\r\n        const newState = {\r\n            ...state,\r\n            current: null,\r\n        }\r\n        return newState\r\n    }\r\n    case 'RESET_WINDOWS': {\r\n        return []\r\n    }\r\n    default: return state\r\n    }\r\n}\r\n\r\nexport const addWindow = (type, initialState) => {\r\n    const newWindow = {\r\n        type,\r\n        initialState,\r\n        id: Math.floor(Math.random()*10000)\r\n    }\r\n    return {\r\n        type: 'ADD_WINDOW',\r\n        data: newWindow\r\n    }\r\n}\r\n\r\nexport const closeWindow = (id) => {\r\n    return {\r\n        type: 'CLOSE_WINDOW',\r\n        data: id\r\n    }\r\n}\r\n\r\nexport const selectWindow = (id) => {\r\n    return {\r\n        type: 'SET_CURRENT_WINDOW',\r\n        data: id\r\n    }\r\n}\r\n\r\nexport const resetSelected = () => {\r\n    return {\r\n        type: 'RESET_CURRENT_WINDOW',\r\n    }\r\n}\r\n\r\nexport default windowReducer","import loginService from '../services/login'\r\nimport userService from '../services/users'\r\n\r\nimport {info, error} from './notification'\r\nimport { closeWindow } from './windows'\r\n\r\nconst initialState = {\r\n    user: null,\r\n    token: null,\r\n    storageChecked: false\r\n}\r\nconst sessionReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n    case 'INIT_SESSION': {\r\n        return {\r\n            ...action.data,\r\n            storageChecked: true\r\n        }\r\n    }\r\n    case 'RESET_SESSION': {\r\n        return {\r\n            ...initialState,\r\n            storageChecked: true\r\n        }\r\n    }\r\n    default: return state\r\n    }\r\n}\r\n\r\nexport const manualSignIn = (username, password, windowId) => {\r\n    return async dispatch => {\r\n        const user = {username, password}\r\n\r\n        try {\r\n            const res = await loginService.auth(user)\r\n\r\n            window.localStorage.setItem('id', res.user.id)\r\n            window.localStorage.setItem('token', res.token)\r\n\r\n            dispatch({\r\n                type: 'INIT_SESSION',\r\n                data: res\r\n            })\r\n\r\n            dispatch(closeWindow(windowId))\r\n\r\n            dispatch(info('Successfully logged in', 5))\r\n        } catch (err) {\r\n            dispatch(error('Failed to log in, password or username incorrect', 5))\r\n        }\r\n    }\r\n}\r\n\r\nexport const continueSession = () => {\r\n    return async dispatch => {\r\n        const id = window.localStorage.getItem('id')\r\n        const token = window.localStorage.getItem('token')\r\n\r\n        if (id && token) {\r\n            try {\r\n                const user = await userService.getById(id)\r\n\r\n                dispatch({\r\n                    type: 'INIT_SESSION',\r\n                    data: {\r\n                        user,\r\n                        token\r\n                    }\r\n                })\r\n\r\n            } catch (err) {\r\n                window.localStorage.removeItem('id')\r\n                window.localStorage.removeItem('token')\r\n\r\n                dispatch({\r\n                    type: 'RESET_SESSION'\r\n                })\r\n            }\r\n        } else {\r\n            dispatch({\r\n                type: 'RESET_SESSION'\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const endSession = () => {\r\n    return async dispatch => {\r\n        window.localStorage.removeItem('id')\r\n        window.localStorage.removeItem('token')\r\n\r\n        dispatch(info('Successfully logged out', 5))\r\n\r\n        dispatch({\r\n            type: 'RESET_SESSION'\r\n        })\r\n    }\r\n}\r\n\r\nexport default sessionReducer","import React, {useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {AppBar, Toolbar, Button, List, ListItem, Divider} from 'react95'\r\n\r\nimport {endSession} from '../reducers/session'\r\nimport {resetSelected} from '../reducers/windows'\r\n\r\nconst NavBar = () => {\r\n    const user = useSelector(state => state.session.user)\r\n    const dispatch = useDispatch()\r\n    const [mainOpen, setMainOpen] = useState(false)\r\n    const [secondaryOpen, setSecondaryOpen] = useState(false)\r\n\r\n    const openMain = () => {\r\n        if (!mainOpen) {\r\n            dispatch(resetSelected())\r\n        }\r\n        setMainOpen(!mainOpen)\r\n    }\r\n\r\n    const openSecondary = () => {\r\n        if (!secondaryOpen) {\r\n            dispatch(resetSelected())\r\n        }\r\n        setSecondaryOpen(!mainOpen)\r\n    }\r\n    return(\r\n        <AppBar style={{position: 'relative', zIndex: 12}}>\r\n            <Toolbar style={{justifyContent: 'space-between'}}>\r\n\r\n                {/* main drop down */}\r\n                <div style={{position: 'relative', display: 'inline-block'}}>\r\n                    <Button\r\n                        onClick={() => openMain()}\r\n                        active={mainOpen}\r\n                        style={{fontWeight: 'bold'}}\r\n                    >\r\n                        <img\r\n                            alt='logo'\r\n                            style={{height: '20px', marginRight: 4}}\r\n                        />\r\n                        Twooder\r\n                    </Button>\r\n                    {mainOpen && <MainDropDown setOpen={setMainOpen}/>}\r\n                </div>\r\n\r\n                {/* secondary drop down */}\r\n                {user ?\r\n                    <div style={{position: 'relative', display: 'inline-block'}}>\r\n                        <Button\r\n                            onClick={() => openSecondary()}\r\n                            active={secondaryOpen}\r\n                            style={{fontWeight: 'bold'}}\r\n                        >\r\n                            {user.username}\r\n                        </Button>\r\n                        {secondaryOpen && <SecondaryDropDown setOpen={setSecondaryOpen}/>}\r\n                    </div>\r\n                    :\r\n                    <Link to=\"/signin\">\r\n                        <div style={{position: 'relative', display: 'inline-block'}}>\r\n                            <Button\r\n                                style={{fontWeight: 'bold'}}\r\n                            >\r\n                                Sign In\r\n                            </Button>\r\n                        </div>\r\n                    </Link>\r\n                }\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\n\r\nconst MainDropDown = ({setOpen}) => {\r\n    return (\r\n        <List\r\n            style={{\r\n                position: 'absolute',\r\n                left: '0',\r\n                top: '100%',\r\n            }}\r\n            onClick={() => setOpen(false)}\r\n        >\r\n            <Link to=\"/\">\r\n                <ListItem>\r\n                    <span role='img'>\r\n                        ✉️\r\n                    </span>\r\n                    Home\r\n                </ListItem>\r\n            </Link>\r\n            <Divider />\r\n            <Link to=\"/twoods\">\r\n                <ListItem>\r\n                    <span role='img'>\r\n                        ✉️\r\n                    </span>\r\n                    Twoods\r\n                </ListItem>\r\n            </Link>\r\n            <Link to=\"/users\">\r\n                <ListItem>\r\n                    <span role='img'>\r\n                        👨‍💻\r\n                    </span>\r\n                    Users\r\n                </ListItem>\r\n            </Link>\r\n            <Link to=\"/rooms\">\r\n                <ListItem>\r\n                    <span role='img'>\r\n                        📁\r\n                    </span>\r\n                     Rooms\r\n                </ListItem>\r\n            </Link>\r\n        </List>\r\n    )\r\n}\r\n\r\nconst SecondaryDropDown = ({setOpen}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const signOut = () => {\r\n        dispatch(endSession())\r\n    }\r\n    return (\r\n        <List\r\n            style={{\r\n                position: 'absolute',\r\n                right: '0',\r\n                top: '100%',\r\n                zIndex: 13\r\n            }}\r\n            onClick={() => setOpen(false)}\r\n        >\r\n            <Link to=\"/user\">\r\n                <ListItem>\r\n                    <span role='img'>\r\n                        👨‍💻\r\n                    </span>\r\n                    Profile\r\n                </ListItem>\r\n            </Link>\r\n            <Divider />\r\n            <Link to=\"/newtwood\">\r\n                <ListItem>\r\n                    <span role='img'>\r\n                        📁\r\n                    </span>\r\n                    Create Twood\r\n                </ListItem>\r\n            </Link>\r\n            <Link to=\"/newroom\">\r\n                <ListItem>\r\n                    <span role='img'>\r\n                        📁\r\n                    </span>\r\n                    Create Room\r\n                </ListItem>\r\n            </Link>\r\n            <Divider />\r\n            <ListItem onClick={() => signOut()}>\r\n                <span role='img' aria-label='🔙'>\r\n                    🔙\r\n                </span>\r\n                Sign Out\r\n            </ListItem>\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\n\r\nimport {Panel, Bar, Toolbar, Button, List, ListItem, Divider} from 'react95'\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <div style={{position: 'fixed', bottom: '0', left: '0', width: '100%', zIndex: 1000}}>\r\n            <Panel\r\n                variant='outside'\r\n                shadow\r\n                style={{padding: '1rem', lineHeight: '1.5', width: '100%',}}\r\n            >\r\n            </Panel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, {useEffect} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {addWindow} from '../reducers/windows'\r\n\r\nconst SignUp = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(addWindow('signup'))\r\n    }, [])\r\n\r\n    return (\r\n        null\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","import React, {useEffect} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {addWindow} from '../reducers/windows'\r\n\r\nconst SignIn = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(addWindow('signin'))\r\n    }, [])\r\n\r\n    return (\r\n        null\r\n    )\r\n}\r\n\r\nexport default SignIn\r\n","import React, {useEffect} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {addWindow} from '../reducers/windows'\r\n\r\nconst OwnUser = () => {\r\n    const {user} = useSelector(state => state.session)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(addWindow('ownuser', user))\r\n    }, [])\r\n\r\n    return (\r\n        null\r\n    )\r\n}\r\n\r\n\r\nexport default OwnUser","import React from 'react'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, {useEffect} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nimport userService from '../services/users'\r\nimport {info, error} from '../reducers/notification'\r\nimport {addWindow} from '../reducers/windows'\r\n\r\nexport const SingleUser = () => {\r\n    const id = useParams().id\r\n    const dispatch = useDispatch()\r\n\r\n    const getUser = async () => {\r\n        try {\r\n            const res = await userService.getById(id)\r\n\r\n            dispatch(addWindow('user', res))\r\n        } catch (err) {\r\n            dispatch(error('Error fetching user', 5))\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getUser()\r\n    }, [id])\r\n\r\n    return (\r\n        null\r\n    )\r\n}\r\n\r\nexport const Users = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const getUsers = async () => {\r\n        try {\r\n            const res = await userService.getAll()\r\n\r\n            dispatch(addWindow('users', res))\r\n        } catch (err) {\r\n            dispatch(error('Error fetching users', 5))\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getUsers()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        null\r\n    )\r\n}\r\n\r\n\r\nexport default Users","import axios from 'axios'\r\n\r\nimport {API_URL} from '../utils/config'\r\nimport logger from '../utils/logger'\r\n\r\nconst extension = 'api/twoods/'\r\nconst baseUrl = API_URL + extension\r\n\r\nexport default {\r\n    getAll: async () => {\r\n        try {\r\n            logger.info(extension, 'Fetching twoods')\r\n\r\n            const res = await axios.get(baseUrl)\r\n\r\n            logger.info(extension, 'Twoods fetched', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    create: async (newTwood, token) => {\r\n        try {\r\n            logger.info(extension, 'Creating twood', newTwood)\r\n\r\n            const res = await axios.post(baseUrl, newTwood, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + token\r\n                }\r\n            })\r\n\r\n            logger.info(extension, 'Twood created', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    getById: async (id) => {\r\n        try {\r\n            logger.info(extension, 'Fetching twood', id)\r\n\r\n            const res = await axios.get(baseUrl + id)\r\n\r\n            logger.info(extension, 'Twood fetched', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    getByUser: async (id) => {\r\n        try {\r\n            logger.info(extension, 'Fetching twoods', id)\r\n\r\n            const res = await axios.get(baseUrl + 'user/' + id)\r\n\r\n            logger.info(extension, 'Twoods fetched', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    remove: async (id, token) => {\r\n        try {\r\n            logger.info(extension, 'Deleting twood', id)\r\n\r\n            const res = await axios.delete(baseUrl + id, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + token\r\n                }\r\n            })\r\n\r\n            logger.info(extension, 'Twood deleted', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    update: async (id, obj, token) => {\r\n        try {\r\n            const newTwood = {\r\n                ...obj,\r\n                user: (obj.user.id) ? obj.user.id : obj.user\r\n            }\r\n            logger.info(extension, 'Updating twood', id, newTwood)\r\n\r\n\r\n            const res = await axios.put(`${baseUrl}${id}`, newTwood, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + token\r\n                }\r\n            })\r\n\r\n            logger.info(extension, 'Twood updated', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    like: async (id, token) => {\r\n        try {\r\n            logger.info(extension, 'Liking twood', id)\r\n\r\n\r\n            const res = await axios.post(`${baseUrl}${id}/like`, null, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + token\r\n                }\r\n            })\r\n\r\n            logger.info(extension, 'Twood successfully liked', id, res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    reply: async (id, newTwood, token) => {\r\n        try {\r\n            logger.info(extension, 'Replying to twood', id, newTwood)\r\n\r\n\r\n            const res = await axios.post(`${baseUrl}${id}/reply`, newTwood, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + token\r\n                }\r\n            })\r\n\r\n            logger.info(extension, 'Twood replied to', id, res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    }\r\n}","import React, {useEffect} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nimport twoodService from '../services/twoods'\r\nimport {info, error} from '../reducers/notification'\r\nimport {addWindow} from '../reducers/windows'\r\n\r\nexport const SingleTwood = () => {\r\n    const id = useParams().id\r\n    const dispatch = useDispatch()\r\n\r\n    const getTwood = async () => {\r\n        try {\r\n            const res = await twoodService.getById(id)\r\n\r\n            dispatch(addWindow('twood', res))\r\n        } catch (err) {\r\n            dispatch(error('Error fetching twood', 5))\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getTwood()\r\n    }, [id])\r\n\r\n    return (\r\n        null\r\n    )\r\n}\r\n\r\nexport const Twoods = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const getTwoods = async () => {\r\n        try {\r\n            const res = await twoodService.getAll()\r\n\r\n            dispatch(addWindow('twoods', res))\r\n        } catch (err) {\r\n            dispatch(error('Error fetching twoods', 5))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTwoods()\r\n    }, [])\r\n\r\n    return (\r\n        null\r\n    )\r\n}\r\n\r\nexport const NewTwood = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(addWindow('newtwood'))\r\n    }, [])\r\n\r\n    return (\r\n        null\r\n    )\r\n}\r\n","import axios from 'axios'\r\n\r\nimport {API_URL} from '../utils/config'\r\nimport logger from '../utils/logger'\r\n\r\nconst extension = 'api/rooms/'\r\nconst baseUrl = API_URL + extension\r\n\r\nexport default {\r\n    getAll: async () => {\r\n        try {\r\n            logger.info(extension, 'Fetching rooms')\r\n\r\n            const res = await axios.get(baseUrl)\r\n\r\n            logger.info(extension, 'Rooms fetched', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    create: async (newRoom) => {\r\n        try {\r\n            logger.info(extension, 'Creating room', newRoom)\r\n\r\n            const res = await axios.post(baseUrl, newRoom)\r\n\r\n            logger.info(extension, 'Room created', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    getById: async (id) => {\r\n        try {\r\n            logger.info(extension, 'Fetching room', id)\r\n\r\n            const res = await axios.get(baseUrl + id)\r\n\r\n            logger.info(extension, 'Room fetched', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    remove: async (id) => {\r\n        try {\r\n            logger.info(extension, 'Deleting room', id)\r\n\r\n            const res = await axios.delete(baseUrl + id)\r\n\r\n            logger.info(extension, 'Room deleted', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    update: async (id, newRoom) => {\r\n        try {\r\n            logger.info(extension, 'Updating room', id, newRoom)\r\n\r\n            const res = await axios.put(`${baseUrl}${id}`, newRoom)\r\n\r\n            logger.info(extension, 'Room updated', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n}","import React, {useEffect} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {useParams,} from 'react-router-dom'\r\n\r\nimport roomService from '../services/rooms'\r\nimport {info, error} from '../reducers/notification'\r\nimport {addWindow} from '../reducers/windows'\r\n\r\nexport const SingleRoom = () => {\r\n    const id = useParams().id\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const getRoom = async () => {\r\n        try {\r\n            const res = await roomService.getById(id)\r\n\r\n            dispatch(addWindow('room', res))\r\n        } catch (err) {\r\n            dispatch(error('Error fetching room', 5))\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getRoom()\r\n    }, [])\r\n\r\n    return (\r\n        null\r\n    )\r\n}\r\n\r\nexport const Rooms = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const getRooms = async () => {\r\n        try {\r\n            const res = await roomService.getAll()\r\n\r\n            dispatch(addWindow('rooms', res))\r\n        } catch (err) {\r\n            dispatch(error('Error fetching rooms', 5))\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getRooms()\r\n    }, [])\r\n\r\n    return (\r\n        null\r\n    )\r\n}\r\n\r\nexport const NewRoom = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(addWindow('newroom'))\r\n    }, [])\r\n\r\n    return (\r\n        null\r\n    )\r\n}","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\n\r\nimport SignUp from './SignUp'\r\nimport SignIn from './SignIn'\r\nimport OwnUser from './OwnUser'\r\nimport Home from './Home'\r\nimport {Users, SingleUser} from './Users'\r\nimport {Twoods, SingleTwood, NewTwood} from './Twoods'\r\nimport {Rooms, SingleRoom, NewRoom} from './Rooms'\r\n\r\nconst Routing = () => {\r\n    const {user, storageChecked} = useSelector(state => state.session)\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/signin\">\r\n                {user ? storageChecked ? <Redirect to=\"/\"/> : <div/> : <SignIn/>}\r\n            </Route>\r\n            <Route path=\"/signup\">\r\n                {user ? storageChecked ? <Redirect to=\"/\"/> : <div/> : <SignUp/>}\r\n            </Route>\r\n            <Route path=\"/twoods/:id\">\r\n                <SingleTwood/>\r\n            </Route>\r\n            <Route path=\"/twoods\">\r\n                <Twoods/>\r\n            </Route>\r\n            <Route path=\"/rooms/:id\">\r\n                <SingleRoom/>\r\n            </Route>\r\n            <Route path=\"/rooms\">\r\n                <Rooms/>\r\n            </Route>\r\n            <Route path=\"/users/:id\">\r\n                <SingleUser />\r\n            </Route>\r\n            <Route path=\"/users/\">\r\n                <Users/>\r\n            </Route>\r\n            <Route path=\"/user/\">\r\n                {user ? <OwnUser /> : storageChecked ? <Redirect to=\"/signin\" /> : <div/>}\r\n            </Route>\r\n            <Route path=\"/newtwood/\">\r\n                {user ? <NewTwood /> : storageChecked ? <Redirect to=\"/signin\" /> : <div/>}\r\n            </Route>\r\n            <Route path=\"/newroom\">\r\n                {user ? <NewRoom /> : storageChecked ? <Redirect to=\"/signin\" /> : <div/>}\r\n            </Route>\r\n            <Route path=\"/\">\r\n                <Home />\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Routing\r\n","import React from 'react'\r\nimport {createGlobalStyle, ThemeProvider, css} from 'styled-components'\r\n\r\nimport {styleReset} from 'react95'\r\n\r\nimport original from 'react95/dist/themes/original'\r\n\r\nimport ms_sans_serif from 'react95/dist/fonts/ms_sans_serif.woff2'\r\nimport ms_sans_serif_bold from 'react95/dist/fonts/ms_sans_serif_bold.woff2'\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  ${styleReset}\r\n  @font-face {\r\n    font-family: 'ms_sans_serif';\r\n    src: url('${ms_sans_serif}') format('woff2');\r\n    font-weight: 400;\r\n    font-style: normal\r\n  }\r\n  @font-face {\r\n    font-family: 'ms_sans_serif';\r\n    src: url('${ms_sans_serif_bold}') format('woff2');\r\n    font-weight: bold;\r\n    font-style: normal\r\n  }\r\n  body {\r\n    font-family: 'ms_sans_serif';\r\n    background-color: #1abc9c;\r\n  }\r\n  * {\r\n    scrollbar-width: none\r\n  }\r\n`\r\n\r\n\r\nconst StyleWrapper = (props) => (\r\n    <div>\r\n        <GlobalStyles />\r\n        <ThemeProvider theme={original}>\r\n            {props.children}\r\n        </ThemeProvider>\r\n    </div>\r\n)\r\n\r\nexport default StyleWrapper","import React from 'react'\r\nimport {Window, WindowHeader, WindowContent, Button} from 'react95'\r\nimport Draggable from 'react-draggable'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nimport CloseButton from './CloseButton'\r\nimport {closeWindow, selectWindow} from '../reducers/windows'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst StandardWindow = (props) => {\r\n    const current = useSelector(state => state.windows.current)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const close = () => {\r\n        dispatch(closeWindow(props.id))\r\n        history.push('/')\r\n    }\r\n\r\n    const getzIndex = () => {\r\n        return (current===props.id) ? 15 : 11\r\n    }\r\n\r\n    const select = () => {\r\n        dispatch(selectWindow(props.id))\r\n    }\r\n\r\n    return (\r\n        <Draggable onMouseDown={() => select()} >\r\n            <div\r\n                style={{display: 'flex', justifyContent: 'center', position: 'absolute', zIndex: getzIndex()}}\r\n            >\r\n                <Window className='window'>\r\n                    <WindowHeader className='window-header'>\r\n                        {props.title}\r\n                        <CloseButton onClose={close}/>\r\n                    </WindowHeader>\r\n                    <WindowContent>\r\n                        {props.children}\r\n                    </WindowContent>\r\n                </Window>\r\n            </div>\r\n        </Draggable>\r\n\r\n    )\r\n}\r\n\r\nexport default StandardWindow\r\n","import {useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nimport twoodService from '../services/twoods'\r\n\r\nimport {info, error} from '../reducers/notification'\r\n\r\nexport const useField = (type) => {\r\n    const [value, setValue] = useState('')\r\n\r\n    const onChange = (event) => {\r\n        setValue(event.target.value)\r\n    }\r\n\r\n    const clear = () => {\r\n        setValue('')\r\n    }\r\n\r\n    return {\r\n        input: {\r\n            type,\r\n            value,\r\n            onChange\r\n        },\r\n        clear\r\n    }\r\n}\r\n\r\nexport const useTwood = (id, initialState) => {\r\n    const [twood, setTwood] = useState(null)\r\n    const dispatch = useDispatch()\r\n    const {user, token} = useSelector(state => state.session)\r\n    const replyField = useField('text')\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            getTwood()\r\n        } else {\r\n            setTwood(initialState)\r\n        }\r\n    }, [id, initialState])\r\n\r\n    const getTwood = async () => {\r\n        const res = await twoodService.getById(id)\r\n        setTwood(res)\r\n    }\r\n\r\n    const like = async () => {\r\n        try {\r\n            await twoodService.like(twood.id, token)\r\n\r\n            setTwood({\r\n                ...twood,\r\n                likes: twood.likes+1\r\n            })\r\n\r\n            dispatch(info('Twood successfully liked', 5))\r\n        } catch (err) {\r\n            dispatch(error('Error liking twood', 5))\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const reply = async (content, e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const newTwood = {\r\n                content: content\r\n            }\r\n            const res = await twoodService.reply(twood.id, newTwood, token)\r\n\r\n            setTwood({\r\n                ...twood,\r\n                replies: twood.replies.concat(res)\r\n            })\r\n\r\n            replyField.clear()\r\n\r\n            dispatch(info('Twood successfully replied to', 5))\r\n        } catch (err) {\r\n            dispatch(error('Error replying to twood', 5))\r\n        }\r\n    }\r\n\r\n    const remove = async () => {\r\n        try {\r\n            await twoodService.remove(twood.id, token)\r\n\r\n            setTwood(null)\r\n            dispatch(info('Twood successfully deleted', 5))\r\n        } catch (err) {\r\n            dispatch(error('Error deleting twood', 5))\r\n        }\r\n    }\r\n\r\n    const operations = {\r\n        like: (user) ? like : null,\r\n        reply: (user) ? reply : null,\r\n        remove: (user && twood) ? (user.id === twood.user.id) ? remove : null : null\r\n    }\r\n\r\n    return {\r\n        twood,\r\n        operations,\r\n        replyField\r\n    }\r\n}\r\n\r\nexport const usePages = (initialState) => {\r\n    const [index, setIndex] = useState(0)\r\n    const [pages, setPages] = useState([])\r\n    const [pageSize, setPageSize] = useState(10)\r\n    const [sortOrder, setSortOrder] = useState(false)\r\n\r\n    const initPages = (list) => {\r\n        const nofPages = Math.ceil(list.length/pageSize)\r\n\r\n        let temp = []\r\n\r\n        let count = 0\r\n\r\n        for (let i=0;i<nofPages;i++) {\r\n            temp[i] = []\r\n            for (let j=0;j<pageSize;j++) {\r\n                temp[i][j] = list[count]\r\n                count++\r\n                if (count === list.length) {\r\n                    break\r\n                }\r\n            }\r\n        }\r\n\r\n        setPages(temp)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (initialState[0]) {\r\n            initPages(initialState)\r\n        }\r\n    }, [initialState])\r\n\r\n    const nextPage = () => {\r\n        setIndex(index+1)\r\n    }\r\n\r\n    const prevPage = () => {\r\n        setIndex(index-1)\r\n    }\r\n\r\n    const sort = (head) => {\r\n        setSortOrder(!sortOrder)\r\n\r\n        initPages(initialState.sort((a, b) => {\r\n            if (sortOrder) {\r\n                return a[head] > b[head]\r\n            } else {\r\n                return a[head] < b[head]\r\n            }\r\n        }))\r\n    }\r\n\r\n    const operations = {\r\n        next: (index != pages.length-1) ? nextPage : null,\r\n        prev: (index > 0) ? prevPage : null,\r\n        sort\r\n    }\r\n\r\n    const current = (pages[0]) ? pages[index] : []\r\n\r\n    return {\r\n        current,\r\n        operations\r\n    }\r\n}","import React from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport {Table, TableHead, TableBody, TableRow, TableHeadCell, TableDataCell, Button} from 'react95'\r\n\r\nimport {usePages} from '../hooks'\r\n\r\nconst tableTypes = {\r\n    twoods: ['content', 'likes'],\r\n    users: ['username'],\r\n    rooms: ['name']\r\n}\r\n\r\nconst StandardTable = ({initialState, type}) => {\r\n    const history = useHistory()\r\n    const {current, operations} = usePages(initialState)\r\n\r\n    const {next, prev, sort} = operations\r\n\r\n    const tableType = tableTypes[type]\r\n\r\n    if (!current[0]) return null\r\n\r\n    return (\r\n        <div>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow head>\r\n                        {tableType.map(head => {\r\n                            return (\r\n                                <TableHeadCell onClick={() => sort(head)} key={head}>\r\n                                    {head}\r\n                                </TableHeadCell>\r\n                            )\r\n                        })}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {current.map(item => {\r\n                        return (\r\n                            <TableRow\r\n                                key={item.id}\r\n                                onClick={() => history.push(`/${type}/${item.id}`)}\r\n                            >\r\n                                {tableType.map(cell => {\r\n                                    return <TableDataCell key={cell}>{item[cell]}</TableDataCell>\r\n                                })}\r\n                            </TableRow>\r\n                        )\r\n                    })}\r\n                </TableBody>\r\n            </Table>\r\n            <Button\r\n                disabled={!prev}\r\n                onClick={() => prev()}\r\n            >\r\n                Prev Page\r\n            </Button>\r\n            <Button\r\n                disabled={!next}\r\n                onClick={() => next()}\r\n            >\r\n                    Next Page\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default StandardTable\r\n","import React from 'react'\r\n\r\nimport StandardTable from '../components/StandardTable'\r\n\r\nexport const Profile = ({user}) => {\r\n    if (!user) return null\r\n\r\n    if (user) {\r\n        return (\r\n            <div>\r\n                <p>username: {user.username} </p>\r\n                <p>id: {user.id} </p>\r\n                <StandardTable initialState={user.twoods} type='twoods'/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}","import React from 'react'\r\n\r\nimport StandardWindow from '../StandardWindow'\r\nimport StandardTable from '../StandardTable'\r\nimport {Profile} from '../Profile'\r\n\r\nexport const SingleUser = ({initialState, id}) => {\r\n    return (\r\n        <StandardWindow title='User' id={id}>\r\n            <Profile user={initialState}/>\r\n        </StandardWindow>\r\n    )\r\n}\r\n\r\nexport const Users = ({initialState, id}) => {\r\n    return (\r\n        <StandardWindow title='Users'  id={id}>\r\n            <StandardTable initialState={initialState} type='users'/>\r\n        </StandardWindow>\r\n    )\r\n}\r\n\r\n\r\nexport default Users","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useTwood} from '../hooks'\r\n\r\nimport {ToolPanel, Fieldset, Button, Divider, TextField} from 'react95'\r\n\r\nexport const TwoodReply = ({id, initialState}) => {\r\n    const {twood, operations} = useTwood(id, initialState)\r\n\r\n    if (!twood) return null\r\n\r\n    const {user} = twood\r\n    const {like} = operations\r\n\r\n    return (\r\n        <Fieldset\r\n            label={user.username}\r\n        >\r\n            <Link to={`/twoods/${twood.id}`}>\r\n                {twood.content}\r\n                <p>LIKES: {twood.likes}</p>\r\n            </Link>\r\n        </Fieldset>\r\n    )\r\n\r\n}\r\n\r\nexport const Twood = ({id, initialState}) => {\r\n    const {twood, operations, replyField} = useTwood(id, initialState)\r\n\r\n    if (!twood) return null\r\n\r\n    const {like, reply, remove} = operations\r\n    const {user} = twood\r\n\r\n    return (\r\n        <div>\r\n            <Fieldset label={user.username}>\r\n                {twood.content}\r\n                <p>LIKES: {twood.likes}</p>\r\n            </Fieldset>\r\n            {reply ?\r\n                <form>\r\n                    <TextField {...replyField.input} />\r\n                    <Button\r\n                        size='sm'\r\n                        onClick={(e) => {operations.reply(replyField.input.value, e)}}\r\n                    >\r\n                        REPLY\r\n                    </Button>\r\n                </form>\r\n                : null\r\n            }\r\n            {like ? <Button size='sm' onClick={() => like()}>LIKE</Button> : null}\r\n            {remove ? <Button size='sm' onClick={() => remove()}>REMOVE</Button> : null}\r\n\r\n            <Divider/>\r\n\r\n            {twood.replies.map(reply => {\r\n                return (\r\n                    <TwoodReply key={reply.id} id={reply.id}/>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react'\r\n\r\nimport StandardTable from '../components/StandardTable'\r\n\r\nexport const Room = ({room}) => {\r\n    if (!room) return null\r\n\r\n    return (\r\n        <div>\r\n            <p>name: {room.name} </p>\r\n            <p>id: {room.id} </p>\r\n            <StandardTable initialState={room.twoods} type='twoods'/>\r\n        </div>\r\n    )\r\n}\r\n","import SignUp from './SignUp'\r\nimport SignIn from './SignIn'\r\nimport OwnUser from './OwnUser'\r\nimport {Users, SingleUser} from './Users'\r\nimport {Twoods, SingleTwood, NewTwood} from './Twoods'\r\nimport {Rooms, SingleRoom, NewRoom} from './Rooms'\r\n\r\nexport const windowIndex = {\r\n    signin: SignIn,\r\n    signup: SignUp,\r\n    twood: SingleTwood,\r\n    twoods: Twoods,\r\n    newtwood: NewTwood,\r\n    room: SingleRoom,\r\n    rooms: Rooms,\r\n    newroom: NewRoom,\r\n    user: SingleUser,\r\n    users: Users,\r\n    ownuser: OwnUser\r\n}\r\n","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {Button, TextField} from 'react95'\r\n\r\nimport StandardWindow from '../StandardWindow'\r\nimport {manualSignIn} from '../../reducers/session'\r\nimport {closeWindow} from '../../reducers/windows'\r\nimport {useField} from '../../hooks'\r\n\r\nconst SignIn = ({initialState, id}) => {\r\n    const history = useHistory()\r\n\r\n    const nameField = useField('text')\r\n    const passwordField = useField('text')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const signIn = (e) => {\r\n        e.preventDefault()\r\n\r\n        const username = nameField.input.value\r\n        const password = passwordField.input.value\r\n\r\n        dispatch(manualSignIn(username, password, id))\r\n\r\n        nameField.clear()\r\n        passwordField.clear()\r\n    }\r\n\r\n    const openSignUp = () => {\r\n        dispatch(closeWindow(id))\r\n        history.push('/signup/')\r\n    }\r\n\r\n    return (\r\n        <StandardWindow title='Sign In' id={id}>\r\n            <form>\r\n                User Name: <TextField {...nameField.input} />\r\n                Password: <TextField {...passwordField.input} />\r\n\r\n                <Button\r\n                    styles={{float: 'right'}}\r\n                    id=\"signin-button\" type=\"submit\"\r\n                    primary={true}\r\n                    onClick={signIn}\r\n                >\r\n                    Sign In\r\n                </Button>\r\n            </form>\r\n            not a twooder user?\r\n            <Button\r\n                id=\"redirect-sign-up-button\"\r\n                type=\"submit\"\r\n                onClick={() => openSignUp()}\r\n            >\r\n            Sign Up!\r\n            </Button>\r\n        </StandardWindow>\r\n    )\r\n}\r\n\r\nexport default SignIn\r\n","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {Button, TextField} from 'react95'\r\n\r\nimport StandardWindow from '../StandardWindow'\r\nimport {useField} from '../../hooks'\r\nimport {info, error} from '../../reducers/notification'\r\nimport userService from '../../services/users'\r\n\r\nconst LogIn = ({initialState, id}) => {\r\n    const nameField = useField('text')\r\n    const passwordField = useField('text')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const signUp = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const user = {\r\n            username: nameField.input.value,\r\n            password: passwordField.input.value\r\n        }\r\n        try {\r\n            await userService.create(user)\r\n            dispatch(info('Successfully created user', 5))\r\n        } catch (err) {\r\n            dispatch(error('Failed to create user', 5))\r\n        }\r\n\r\n        nameField.clear()\r\n        passwordField.clear()\r\n    }\r\n\r\n    return (\r\n        <StandardWindow title='Sign Up' id={id}>\r\n            <form>\r\n                User Name: <TextField {...nameField.input} />\r\n                Password: <TextField {...passwordField.input} />\r\n\r\n                <Button\r\n                    id=\"signin-button\"\r\n                    type=\"submit\"\r\n                    onClick={signUp}\r\n                >\r\n                    Sign Up\r\n                </Button>\r\n            </form>\r\n        </StandardWindow>\r\n    )\r\n}\r\n\r\nexport default LogIn\r\n","import React from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {Button, TextField} from 'react95'\r\n\r\nimport twoodService from '../../services/twoods'\r\nimport {useField} from '../../hooks'\r\nimport StandardWindow from '../StandardWindow'\r\nimport StandardTable from '../StandardTable'\r\nimport {Twood} from '../Twood'\r\nimport {info, error} from '../../reducers/notification'\r\n\r\nexport const SingleTwood = ({initialState, id}) => {\r\n    return (\r\n        <StandardWindow title='Twood' id={id}>\r\n            <Twood initialState={initialState}/>\r\n        </StandardWindow>\r\n    )\r\n}\r\n\r\nexport const Twoods = ({initialState, id}) => {\r\n    return (\r\n        <StandardWindow title='Twoods' id={id}>\r\n            <StandardTable initialState={initialState} type='twoods'/>\r\n        </StandardWindow>\r\n    )\r\n}\r\n\r\nexport const NewTwood = ({initialState, id}) => {\r\n    const token = useSelector(state => state.session.token)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const titleField = useField('text')\r\n    const contentField = useField('text')\r\n\r\n    const create = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const newTwood = {\r\n            title: titleField.input.value,\r\n            content: contentField.input.value\r\n        }\r\n\r\n        try {\r\n            const res = await twoodService.create(newTwood, token)\r\n\r\n            dispatch(info('Twood successfully created', 5))\r\n\r\n            history.push(`twoods/${res.id}`)\r\n        } catch (err) {\r\n            dispatch(error('Error creating twood', 5))\r\n        }\r\n\r\n        contentField.clear()\r\n    }\r\n\r\n    return (\r\n        <StandardWindow title='New Twood' id={id}>\r\n            <form>\r\n                content:\r\n                <TextField multiline={true} {...contentField.input} />\r\n\r\n                <Button id=\"twood-button\" type=\"submit\" onClick={create}>\r\n                    Twood\r\n                </Button>\r\n            </form>\r\n        </StandardWindow>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {TextField, Button} from 'react95'\r\n\r\nimport roomService from '../../services/rooms'\r\nimport {useField} from '../../hooks'\r\nimport {Room} from '../Room'\r\nimport StandardWindow from '../StandardWindow'\r\nimport StandardTable from '../StandardTable'\r\nimport {info, error} from '../../reducers/notification'\r\n\r\nexport const SingleRoom = ({initialState, id}) => {\r\n    return (\r\n        <StandardWindow title='Room' id={id}>\r\n            <Room room={initialState}/>\r\n        </StandardWindow>\r\n    )\r\n}\r\n\r\nexport const Rooms = ({initialState, id}) => {\r\n    return (\r\n        <StandardWindow title='Rooms' id={id}>\r\n            <StandardTable initialState={initialState} type='rooms'/>\r\n        </StandardWindow>\r\n    )\r\n}\r\n\r\nexport const NewRoom = ({initialState, id}) => {\r\n    const nameField = useField('text')\r\n    const token = useSelector(state => state.session.token)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const create = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const newRoom = {\r\n            name: nameField.input.value\r\n        }\r\n\r\n        try {\r\n            const res = await roomService.create(newRoom, token)\r\n\r\n            dispatch(info('Room successfully created', 5))\r\n\r\n            history.push(`rooms/${res.id}`)\r\n        } catch (err) {\r\n            dispatch(error('Error creating Room', 5))\r\n        }\r\n\r\n        nameField.clear()\r\n    }\r\n\r\n    return (\r\n        <StandardWindow title='New Room' id={id}>\r\n            <form>\r\n                name:\r\n                <TextField {...nameField.input} />\r\n\r\n                <Button type=\"submit\" onClick={create}>\r\n                    Create\r\n                </Button>\r\n            </form>\r\n        </StandardWindow>\r\n    )\r\n}","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\n\r\nimport StandardWindow from '../StandardWindow'\r\nimport {Profile} from '../Profile'\r\n\r\nconst OwnUser = ({initialState, id}) => {\r\n    const {user} = useSelector(state => state.session)\r\n\r\n    return (\r\n        <StandardWindow title='Your Profile' id={id}>\r\n            <Profile user={user}/>\r\n        </StandardWindow>\r\n    )\r\n}\r\n\r\n\r\nexport default OwnUser","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\n\r\nimport {windowIndex} from './components/windows/'\r\n\r\nfunction WindowRenderer() {\r\n    const windows = useSelector(state => state.windows)\r\n\r\n    return (\r\n        <div style={{position: 'relative'}}>\r\n            {windows.items.map(item => {\r\n                const Component = windowIndex[item.type]\r\n\r\n                return (\r\n                    <Component\r\n                        key={item.id}\r\n                        initialState={item.initialState}\r\n                        id={item.id}\r\n                    />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WindowRenderer\r\n","import React, {useEffect} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\n\r\nimport Notification from './components/Notification'\r\nimport NavBar from './components/NavBar'\r\nimport Footer from './components/Footer'\r\n\r\nimport Routing from './pages/'\r\nimport StyleWrapper from './styles'\r\nimport WindowRenderer from './WindowRenderer'\r\nimport {continueSession} from './reducers/session'\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(continueSession())\r\n    }, [])\r\n\r\n    return (\r\n        <StyleWrapper>\r\n            <NavBar/>\r\n            <Notification/>\r\n            <Routing/>\r\n            <WindowRenderer/>\r\n            <Footer/>\r\n        </StyleWrapper>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport notificationReducer from './reducers/notification'\r\nimport sessionReducer from './reducers/session'\r\nimport windowsReducer from './reducers/windows'\r\n\r\nconst reducer = combineReducers({\r\n    notification: notificationReducer,\r\n    session: sessionReducer,\r\n    windows: windowsReducer\r\n})\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {Provider} from 'react-redux'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\n\r\nimport App from './App'\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}